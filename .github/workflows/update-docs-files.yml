name: Update Markprompt Data

on:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * *"

jobs:
  clone-and-copy-docs:
    runs-on: ubuntu-latest # or whatever OS you want to run this on

    steps:
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y curl jq
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Clone and copy docs
        run: |
          REPOS=$(curl -s https://raw.githubusercontent.com/SovereignCloudStack/docs-page/main/docs.package.json | tr -d '[:space:]')
          GH_URL='https://github.com/'
          
          # Loop through the repos and clone them
          while IFS= read -r line; do
          
            # Parse the JSON for this repo
            REPO=$(echo "$line" | jq -r '.repo')
            LABEL=$(echo "$line" | jq -r '.label')
            SOURCE=$(echo "$line" | jq -r '.source')
            TARGET=$(echo "$line" | jq -r '.target')

            # Remove previous dirs
            rm -rf "$(pwd)/repo_to_be_edited"
            
            # Clone the repo
            REPO_DIR="$(pwd)/repo_to_be_edited/$LABEL"
            git clone "$GH_URL$REPO" "$REPO_DIR"
            
            # Remove the README file(s)
            find "$REPO_DIR" -name 'README.md' | xargs rm -f
            
            # Copy the docs to the target directory
            SUB_DIR_PATH="$(pwd)/$TARGET/$LABEL"
            mkdir -p "$SUB_DIR_PATH"
            if [[ "$SOURCE" == *"*.md"* ]]; then
                find "$REPO_DIR" -maxdepth 1 -type f -name "*.md" -exec cp --parents {} "$SUB_DIR_PATH" \;
              else
                cp -r "$REPO_DIR/$SOURCE" "$SUB_DIR_PATH"
            fi
          done < <(echo "$REPOS" | jq -c '.[]')
          
          # Remove the cloned repos
          rm -rf "$(pwd)/repo_to_be_edited"
          
      - name: commit and push
        run: |
          git config user.email "bot@scs"
          git config user.name "Action Bot"
          git add --all
          git commit --signoff -m "update docs"
          git push -f origin HEAD
